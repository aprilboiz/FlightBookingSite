// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.ruaairline.com/support",
            "email": "support@ruaairline.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/airports": {
            "get": {
                "description": "Retrieve a list of all airports",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "airports"
                ],
                "summary": "Get all airports",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.AirportResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/airports/{code}": {
            "get": {
                "description": "Retrieve an airport by its unique code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "airports"
                ],
                "summary": "Get airport by code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Airport Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AirportResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/flights": {
            "get": {
                "description": "Retrieve a list of all flights",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flights"
                ],
                "summary": "Get all flights",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.FlightResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new flight with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flights"
                ],
                "summary": "Create a new flight",
                "parameters": [
                    {
                        "description": "Flight information",
                        "name": "flight",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FlightRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.FlightResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/flights/{code}": {
            "get": {
                "description": "Retrieve a flight by its unique code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flights"
                ],
                "summary": "Get flight by code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Flight Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.FlightResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing flight with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flights"
                ],
                "summary": "Update a flight",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Flight Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Flight information",
                        "name": "flight",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FlightRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.FlightResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a flight by its unique code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flights"
                ],
                "summary": "Delete a flight",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Flight Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/parameters": {
            "get": {
                "description": "Retrieve a list of all parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parameters"
                ],
                "summary": "Get all the parameters",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Parameter"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update all parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parameters"
                ],
                "summary": "Update parameters",
                "parameters": [
                    {
                        "description": "Parameter information",
                        "name": "flight",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Parameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Parameter"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/planes": {
            "get": {
                "description": "Retrieve a list of all planes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "planes"
                ],
                "summary": "Get all planes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.PlaneResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/planes/{code}": {
            "get": {
                "description": "Retrieve a plane by its unique code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "planes"
                ],
                "summary": "Get plane by code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plane Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PlaneResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AirportResponse": {
            "type": "object",
            "properties": {
                "airport_code": {
                    "type": "string"
                },
                "airport_name": {
                    "type": "string"
                },
                "city_name": {
                    "type": "string"
                },
                "country_name": {
                    "type": "string"
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "details": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.FlightRequest": {
            "type": "object",
            "properties": {
                "arrival_airport": {
                    "type": "string"
                },
                "base_price": {
                    "type": "number"
                },
                "departure_airport": {
                    "type": "string"
                },
                "departure_date": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "intermediate_stops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.IntermediateStopDTO"
                    }
                },
                "plane_code": {
                    "type": "string"
                }
            }
        },
        "dto.FlightResponse": {
            "type": "object",
            "properties": {
                "arrival_airport": {
                    "type": "string"
                },
                "base_price": {
                    "type": "number"
                },
                "departure_airport": {
                    "type": "string"
                },
                "departure_date": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "flight_code": {
                    "type": "string"
                },
                "intermediate_stops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.IntermediateStopDTO"
                    }
                },
                "plane_code": {
                    "type": "string"
                }
            }
        },
        "dto.IntermediateStopDTO": {
            "type": "object",
            "properties": {
                "note": {
                    "type": "string"
                },
                "stop_airport": {
                    "type": "string"
                },
                "stop_duration": {
                    "type": "integer"
                },
                "stop_order": {
                    "type": "integer"
                }
            }
        },
        "dto.PlaneResponse": {
            "type": "object",
            "properties": {
                "plane_code": {
                    "type": "string"
                },
                "plane_name": {
                    "type": "string"
                }
            }
        },
        "models.Parameter": {
            "type": "object",
            "properties": {
                "latest_ticket_purchase_time": {
                    "type": "integer"
                },
                "max_intermediate_stop_duration": {
                    "type": "integer"
                },
                "max_intermediate_stops": {
                    "type": "integer"
                },
                "max_ticket_classes": {
                    "type": "integer"
                },
                "min_flight_duration": {
                    "type": "integer"
                },
                "min_intermediate_stop_duration": {
                    "type": "integer"
                },
                "number_of_airports": {
                    "type": "integer"
                },
                "ticket_cancellation_time": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{"http", "https"},
	Title:            "Flight Management API",
	Description:      "API for flight management system",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
